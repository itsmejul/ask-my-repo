services:


# microservices depends on qdrant and postgres, gateway depends on microservices, fe depends on backend
  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped # Always restart when the cotainer stops for any reason, except for manual stop with $docker stop
    container_name: qdrant  # Otherwise, container name is auto generated from project_service_index
    ports:             # these ports will be exposed to the host. we dont need it for other containers on the same network
      - 6333:6333
      - 6334:6334
    expose:     # expose is just for human documentation which ports are used. even if we dont use expose, still each container in the same network can use those ports
      - 6333
      - 6334
      - 6335
    #configs: # only for docker swarm
     # - source: qdrant_config
      #  target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage   # bind mount, path is relative to docker-compose.yml path
    networks:
      - ask-my-repo-net
  gateway:
    build: ./gateway
    ports: 
      - 5000:5000
    container_name: gateway
    env_file:
      - common.env
    networks:
      - ask-my-repo-net
      - web # so nginx can connect to gateway 
  retrieve:
    build: ./retrieve
    # no ports, since it is only accessed by the gateway microservice which is in the same network
    container_name: retrieve
    env_file:
      - common.env
      - retrieve/.env
    networks:
      - ask-my-repo-net
    volumes:
      - ./hf_cache:/tmp/llama_index
  index:
    build: ./index
    container_name: index
    env_file:
      - common.env
    networks:
      - ask-my-repo-net
    depends_on: 
      - redis
    volumes:
      - ./hf_cache:/tmp/llama_index
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ask-my-repo-net

  celery:
    build: ./index
    container_name: celery
    command: celery -A celery_worker worker --loglevel=info
    env_file:
      - common.env
    depends_on:
      - redis
    #  - index
    networks:
      - ask-my-repo-net
    volumes:
      - ./hf_cache:/tmp/llama_index

  frontend:
    build: ./frontend
    container_name: frontend
      # ports:
      #      - "8010:8010" #TODO might have to remove these since now we access over nginx
    env_file:
      - common.env
    networks:
      - ask-my-repo-net
      - web

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro # mounts https certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    networks:
      - web
  #flask:
    #build: ./flask-service
    #working_dir: /app
    #command: python backend.py
    #volumes:
    #  - ./flask-service:/app
    #ports:
    #  - "5000:5000"
    #environment:
    #  - PYTHONPATH=/app

  #redis:
  #  image: redis:latest
  #  container_name: redis
  #  ports:
  #    - "6379:6379"
  #  volumes:
  #    - redis_data:/data
  #  restart: unless-stopped


  #celery:
   # build: ./flask-service
   # working_dir: /app
   # command: celery -A celery_worker worker --loglevel=info
   # volumes:
   #   - ./flask-service:/app
   # depends_on:
   #   - redis
   # environment:
   #   - PYTHONPATH=/app

#volumes:
 # redis_data:

networks:
  ask-my-repo-net:
  
  web:
#configs:
#  qdrant_config:
#    content: |
#      log_level: INFO
